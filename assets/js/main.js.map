{"version":3,"file":"./assets/js/main.js","mappings":"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","sources":["webpack://virtual-keyboard/webpack/bootstrap","webpack://virtual-keyboard/./src/scripts/components/KeyboardKeys.js","webpack://virtual-keyboard/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://virtual-keyboard/./src/scripts/components/KeyboardKeysChange.js","webpack://virtual-keyboard/./src/scripts/events/KeyboardEvents.js","webpack://virtual-keyboard/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://virtual-keyboard/./src/scripts/events/KeyboardClickEvent.js","webpack://virtual-keyboard/./src/scripts/events/KeyboardKeyDownEvent.js","webpack://virtual-keyboard/./src/scripts/events/KeyboardKeyUpEvent.js","webpack://virtual-keyboard/./src/scripts/main.js","webpack://virtual-keyboard/./src/scripts/components/KeyboardKey.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import keyboardKey from \"./KeyboardKey\";\r\n\r\nconst keyboardData = require(\"../data/lang_ENG.json\");\r\n\r\nconst keyboardKeys = () => {\r\n  if (!localStorage.getItem(\"lang\")) localStorage.setItem(\"lang\", \"ENG\");\r\n  const LANG = localStorage.getItem(\"lang\");\r\n  const keyboardKeysElement = document.createElement(\"div\");\r\n\r\n  keyboardData.forEach((row, indexRow) => {\r\n    const keyboardKeysRow = document.createElement(\"div\");\r\n    keyboardKeysRow.classList.add(\"keyboard__row\");\r\n\r\n    row.forEach((key) => {\r\n      keyboardKeysRow.innerHTML += keyboardKey(key, indexRow, LANG);\r\n    });\r\n\r\n    keyboardKeysElement.append(keyboardKeysRow);\r\n  });\r\n\r\n  return keyboardKeysElement;\r\n};\r\nexport default keyboardKeys;\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const keyboardKeysChange = (caps) => {\r\n  const keys = document.querySelectorAll(\".keyboard__key\");\r\n\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  for (const key of keys) {\r\n    const LANG = localStorage.getItem(\"lang\");\r\n    const AnotherLANG = LANG === \"RU\" ? \"ENG\" : \"RU\";\r\n    localStorage.setItem(\"lang\", AnotherLANG);\r\n\r\n    let {\r\n      first_symbol: firstSymbol,\r\n      second_symbol: secondSymbol,\r\n      another_first: anotherFirst,\r\n      another_second: anotherSecond,\r\n    } = key.dataset;\r\n\r\n    firstSymbol = firstSymbol || \"\";\r\n    secondSymbol = secondSymbol || \"\";\r\n    anotherFirst = anotherFirst || \"\";\r\n    anotherSecond = anotherSecond || \"\";\r\n\r\n    if (firstSymbol.length === 1) {\r\n      firstSymbol = caps\r\n        ? firstSymbol.toLocaleUpperCase()\r\n        : firstSymbol.toLocaleLowerCase();\r\n    }\r\n    if (secondSymbol.length === 1) {\r\n      secondSymbol = caps\r\n        ? secondSymbol.toLocaleUpperCase()\r\n        : secondSymbol.toLocaleLowerCase();\r\n    }\r\n    if (anotherFirst.length === 1) {\r\n      anotherFirst = caps\r\n        ? anotherFirst.toLocaleUpperCase()\r\n        : anotherFirst.toLocaleLowerCase();\r\n    }\r\n    if (anotherSecond.length === 1) {\r\n      anotherSecond = caps\r\n        ? anotherSecond.toLocaleUpperCase()\r\n        : anotherSecond.toLocaleLowerCase();\r\n    }\r\n\r\n    let symbol = anotherFirst || firstSymbol;\r\n    if (symbol === \"Space\") symbol = \"\";\r\n\r\n    key.dataset.first_symbol = anotherFirst || firstSymbol;\r\n    key.dataset.second_symbol = anotherSecond;\r\n    key.dataset.another_first = firstSymbol;\r\n    key.dataset.another_second = secondSymbol;\r\n    key.innerHTML = symbol;\r\n  }\r\n};\r\n\r\nexport default keyboardKeysChange;\r\n","import keyboardClickEvent from \"./KeyboardClickEvent\";\r\nimport keyboardKeyDownEvent from \"./KeyboardKeyDownEvent\";\r\nimport keyboardKeyUpEvent from \"./KeyboardKeyUpEvent\";\r\n\r\nfunction addMouseDownEvent(that) {\r\n  const keys = document.querySelectorAll(\".keyboard__key\");\r\n  for (let i = 0; i < keys.length; i += 1) {\r\n    keys[i].addEventListener(\"mousedown\", (event) => {\r\n      const codeKey = event.target.dataset.code;\r\n\r\n      if (codeKey === \"AltLeft\" || codeKey === \"AltRight\") that.alt = true;\r\n      if (codeKey === \"ShiftLeft\" || codeKey === \"ShiftRight\") that.shift = true;\r\n      if (codeKey === \"ControlLeft\" || codeKey === \"ControlRight\") that.ctrl = true;\r\n    });\r\n  }\r\n}\r\nfunction changePostionCaret(that) {\r\n  const textarea = document.querySelector(\"#keyboard_textarea\");\r\n  document.querySelector(\"#keyboard_textarea\").blur();\r\n\r\n  textarea.value = textarea.value.replace(\"|\", \"\");\r\n  textarea.value = `${textarea.value.substr(\r\n    0,\r\n    that.caret,\r\n  )}|${textarea.value.substr(that.caret)}`;\r\n}\r\n\r\nclass KeyboardEvents {\r\n  constructor() {\r\n    this.caps = true;\r\n    this.shift = false;\r\n    this.ctrl = false;\r\n    this.alt = false;\r\n    this.caret = 0;\r\n\r\n    addMouseDownEvent(this);\r\n  }\r\n\r\n  handleEvent(event) {\r\n    const { target } = event;\r\n    if (typeof target.selectionStart === \"number\") {\r\n      this.caret = target.selectionStart;\r\n    }\r\n\r\n    changePostionCaret(this);\r\n    switch (event.type) {\r\n      case \"click\":\r\n        keyboardClickEvent(target, this);\r\n        break;\r\n\r\n      case \"keydown\":\r\n        keyboardKeyDownEvent(event, this);\r\n        break;\r\n\r\n      case \"keyup\":\r\n        keyboardKeyUpEvent(event, this);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default KeyboardEvents;\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","const keyboardClickEvent = (target, that) => {\r\n  if (target.closest(\".keyboard__key\")) {\r\n    const textarea = document.querySelector(\"#keyboard_textarea\");\r\n    const code = target.getAttribute(\"data-code\");\r\n    let symbol = target.getAttribute(\"data-first_symbol\");\r\n    const secondSymbol = target.getAttribute(\"data-second_symbol\");\r\n\r\n    if (code === \"Backspace\") {\r\n      textarea.value = textarea.value.replace(\"|\", \"\");\r\n      textarea.value = `${textarea.value.substr(\r\n        0,\r\n        that.caret - 1,\r\n      )}|${textarea.value.substr(that.caret)}`;\r\n      that.caret -= 1;\r\n      return;\r\n    }\r\n    if (code === \"Space\") {\r\n      symbol += \" \";\r\n    }\r\n    if (code === \"Tab\") {\r\n      symbol = \"\\t\";\r\n    }\r\n    if (code === \"Enter\") {\r\n      symbol = \"\\n\";\r\n    }\r\n    if (code === \"ShiftLeft\" || code === \"ShiftRight\") {\r\n      that.shift = false;\r\n      return;\r\n    }\r\n    if (code === \"AltLeft\" || code === \"AltRight\") {\r\n      that.alt = false;\r\n      return;\r\n    }\r\n    if (code === \"ControlLeft\" || code === \"ControlRight\") {\r\n      that.ctrl = false;\r\n      return;\r\n    }\r\n    if (code === \"MetaLeft\") {\r\n      return;\r\n    }\r\n    if (code === \"CapsLock\") {\r\n      const keys = document.querySelectorAll(\".keyboard__key\");\r\n\r\n      for (let i = 0; i < keys.length; i += 1) {\r\n        if (keys[i].innerText.length === 1) {\r\n          keys[i].innerText = that.caps\r\n            ? String(keys[i].innerText).toLowerCase()\r\n            : String(keys[i].innerText).toUpperCase();\r\n\r\n          keys[i].dataset.first_symbol = that.caps\r\n            ? String(keys[i].innerText).toLowerCase()\r\n            : String(keys[i].innerText).toUpperCase();\r\n        }\r\n      }\r\n      that.caps = !that.caps;\r\n      return;\r\n    }\r\n\r\n    if (that.shift) {\r\n      if (secondSymbol) symbol = secondSymbol;\r\n      else symbol = that.caps ? symbol.toLowerCase() : symbol.toUpperCase();\r\n    }\r\n\r\n    textarea.value = textarea.value.replace(\"|\", \"\");\r\n    textarea.value = `${\r\n      textarea.value.substr(0, that.caret) + symbol\r\n    }|${textarea.value.substr(that.caret)}`;\r\n    that.caret += 1;\r\n  }\r\n};\r\n\r\nexport default keyboardClickEvent;\r\n","import keyboardKeysChange from \"../components/KeyboardKeysChange\";\r\n\r\nconst keyboardKeyDownEvent = (event, that) => {\r\n  const keys = document.querySelectorAll(\".keyboard__key\");\r\n  const textarea = document.querySelector(\"#keyboard_textarea\");\r\n\r\n  if (event.keyCode === 9 || event.keyCode === 8 || event.keyCode === 17) event.preventDefault();\r\n\r\n  for (let i = 0; i < keys.length; i += 1) {\r\n    const code = keys[i].getAttribute(\"data-code\");\r\n    let symbol = keys[i].getAttribute(\"data-first_symbol\");\r\n    const secondSymbol = keys[i].getAttribute(\"data-second_symbol\");\r\n\r\n    if (event.code === code) {\r\n      keys[i].classList.add(\"active\");\r\n\r\n      if (code === \"Space\") {\r\n        symbol = \" \";\r\n      }\r\n      if (code === \"Backspace\") {\r\n        if (that.caret !== 0) {\r\n          textarea.value = textarea.value.replace(\"|\", \"\");\r\n          textarea.value = `${textarea.value.substr(\r\n            0,\r\n            that.caret - 1,\r\n          )}|${textarea.value.substr(that.caret)}`;\r\n          that.caret -= 1;\r\n        }\r\n        return;\r\n      }\r\n      if (code === \"Tab\") {\r\n        symbol = \"\\t\";\r\n      }\r\n      if (code === \"Enter\") {\r\n        symbol = \"\\n\";\r\n      }\r\n      if (code === \"ShiftRight\" || code === \"ShiftLeft\") {\r\n        that.shift = true;\r\n        symbol = \"\";\r\n      }\r\n      if (code === \"AltLeft\" || code === \"AltRight\") {\r\n        that.alt = true;\r\n        symbol = \"\";\r\n      }\r\n      if (code === \"ControlLeft\" || code === \"ControlRight\") {\r\n        that.ctrl = true;\r\n        symbol = \"\";\r\n      }\r\n      if (code === \"MetaLeft\") {\r\n        return;\r\n      }\r\n      if (code === \"CapsLock\") {\r\n        const keyLayout = document.querySelectorAll(\".keyboard__key\");\r\n\r\n        for (let k = 0; k < keyLayout.length; k += 1) {\r\n          if (keyLayout[k].dataset.first_symbol.length === 1) {\r\n            keyLayout[k].innerText = that.caps\r\n              ? String(keyLayout[k].innerText).toLowerCase()\r\n              : String(keyLayout[k].innerText).toUpperCase();\r\n\r\n            keyLayout[k].dataset.first_symbol = that.caps\r\n              ? String(keyLayout[k].innerText).toLowerCase()\r\n              : String(keyLayout[k].innerText).toUpperCase();\r\n          }\r\n        }\r\n        that.caps = !that.caps;\r\n\r\n        return;\r\n      }\r\n      if (that.shift) {\r\n        if (secondSymbol) symbol = secondSymbol;\r\n        else symbol = that.caps ? symbol.toLowerCase() : symbol.toUpperCase();\r\n      }\r\n      if (that.ctrl && that.alt) keyboardKeysChange(that.caps);\r\n\r\n      textarea.value = textarea.value.replace(\"|\", \"\");\r\n      textarea.value = `${\r\n        textarea.value.substr(0, that.caret) + symbol\r\n      }|${textarea.value.substr(that.caret)}`;\r\n      that.caret += 1;\r\n    }\r\n  }\r\n};\r\n\r\nexport default keyboardKeyDownEvent;\r\n","const keyboardKeyUpEvent = (event, that) => {\r\n  const keys = document.querySelectorAll(\".keyboard__key\");\r\n\r\n  for (let i = 0; i < keys.length; i += 1) {\r\n    const code = keys[i].getAttribute(\"data-code\");\r\n    if (event.code === code) {\r\n      keys[i].classList.remove(\"active\");\r\n\r\n      if (code === \"ShiftLeft\" || code === \"ShiftRight\") that.shift = false;\r\n      if (code === \"AltLeft\" || code === \"AltRight\") that.alt = false;\r\n      if (code === \"ControlLeft\" || code === \"ControlRight\") that.ctrl = false;\r\n    }\r\n  }\r\n};\r\n\r\nexport default keyboardKeyUpEvent;\r\n","import KeyboardKeys from \"./components/KeyboardKeys\";\r\nimport KeyboardEvents from \"./events/KeyboardEvents\";\r\n\r\nconst root = document.createElement(\"div\");\r\nroot.classList.add(\"root\");\r\n\r\nroot.innerHTML = `\r\n<div class=\"page\">\r\n    <div class=\"keyboard\">\r\n        <div class=\"container keyboard__container\">\r\n            <h1 class=\"keyboard__title\">Virtual keyboard</h1>\r\n            <h2 class=\"keyboard__subtitle\">Made on Windows</h2>\r\n            <h2 class=\"keyboard__subtitle\">Combination change keyboard layout: CTRL + ALT</h2>\r\n            <textarea class=\"keyboard__textarea\" name=\"\" id=\"keyboard_textarea\" readonly></textarea>\r\n            <div class=\"keyboard__keys\">${KeyboardKeys().innerHTML}</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n`;\r\n\r\ndocument.body.append(root);\r\n\r\ndocument.querySelector(\".keyboard__textarea\").onkeypress = () => false;\r\n\r\nconst keyboardEvents = new KeyboardEvents();\r\ndocument.addEventListener(\"click\", keyboardEvents);\r\ndocument.addEventListener(\"keydown\", keyboardEvents);\r\ndocument.addEventListener(\"keyup\", keyboardEvents);\r\n","const keyboardKey = (key, index, lang = \"ENG\") => {\r\n  const firstSymbol = key[lang]?.first_symbol\r\n    ? key[lang].first_symbol\r\n    : key.first_symbol;\r\n\r\n  const secondSymbol = key[lang]?.second_symbol\r\n    ? key[lang].second_symbol\r\n    : key.second_symbol || \"\";\r\n\r\n  const anotherLANG = lang === \"RU\" ? \"ENG\" : \"RU\";\r\n  const anotherFirst = key[anotherLANG]?.first_symbol\r\n    ? key[anotherLANG].first_symbol\r\n    : key.first_symbol;\r\n  const anotherSecond = key[anotherLANG]?.second_symbol\r\n    ? key[anotherLANG].second_symbol\r\n    : key.second_symbol || \"\";\r\n\r\n  const { code } = key;\r\n  let classKey = \"keyboard__key\";\r\n  let symbol = firstSymbol;\r\n\r\n  if (index === 0) classKey += \" keyboard__key--non_center\";\r\n  if (code === \"ShiftLeft\") classKey += \" key_shift_left\";\r\n  if (code === \"Enter\") classKey += \" key_enter\";\r\n  if (code === \"Space\") {\r\n    classKey += \" keyboard__key--space\";\r\n    symbol = \"\";\r\n  }\r\n\r\n  return `\r\n      <div class=\"${classKey}\"\r\n          data-code=${code}\r\n          data-first_symbol=\"${firstSymbol}\"\r\n          ${secondSymbol ? `data-second_symbol='${secondSymbol}'` : \"\"}\r\n          ${anotherFirst ? `data-another_first=\"${anotherFirst}\"` : \"\"}\r\n          ${anotherSecond ? `data-another_second='${anotherSecond}'` : \"\"}>\r\n        ${symbol} \r\n      </div>`;\r\n};\r\n\r\nexport default keyboardKey;\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","keyboardData","require","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","caps","document","querySelectorAll","AnotherLANG","localStorage","getItem","setItem","dataset","firstSymbol","first_symbol","secondSymbol","second_symbol","anotherFirst","another_first","anotherSecond","another_second","toLocaleUpperCase","toLocaleLowerCase","symbol","innerHTML","KeyboardEvents","instance","Constructor","TypeError","this","shift","ctrl","alt","caret","that","keys","addEventListener","event","codeKey","code","addMouseDownEvent","protoProps","textarea","selectionStart","querySelector","blur","value","replace","substr","type","closest","getAttribute","innerText","String","toLowerCase","toUpperCase","keyboardClickEvent","keyCode","preventDefault","classList","add","keyLayout","k","keyboardKeysChange","keyboardKeyDownEvent","remove","keyboardKeyUpEvent","prototype","root","createElement","LANG","keyboardKeysElement","forEach","row","indexRow","keyboardKeysRow","index","lang","anotherLANG","classKey","keyboardKey","append","KeyboardKeys","body","onkeypress","keyboardEvents"],"sourceRoot":""}